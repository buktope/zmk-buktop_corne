#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    macros {
        fetch: fetch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp F &kp E &kp T &kp C &kp H>;
            label = "FETCH";
        };

        pull: pull {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp P &kp U &kp L &kp L &kp SPACE &kp MINUS &kp MINUS &kp R &kp E &kp B &kp A &kp S &kp E>;
            label = "PULL";
        };

        push: push {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp P &kp U &kp S &kp H &kp SPACE>;
            label = "PUSH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC        &kp Q  &kp W  &kp E     &kp R  &kp T                             &kp UP                &kp Y      &kp U  &kp I      &kp O    &kp P           &kp BSPC
&mt LCTRL TAB  &kp A  &kp S  &kp D     &kp F  &kp G                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &kp J  &kp K      &kp L    &kp SEMI        &kp SQT
&kp LSHIFT     &kp Z  &kp X  &kp C     &kp V  &kp B      &kp SPACE              &kp DOWN              &kp N      &kp M  &kp COMMA  &kp DOT  &kp LEFT_BRACE  &kp LCTRL
                             &kp LGUI  &mo 1  &kp ENTER                                               &kp SPACE  &mo 2  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp K_STOP        &kp HOME      &kp LS(N4)     &kp LESS_THAN     &kp ASTERISK                                &mmv MOVE_UP                     &kp EQUAL  &kp N7  &kp N8  &kp N9  &none   &trans
&trans  &kp K_PLAY_PAUSE  &kp QUESTION  &kp BACKSLASH  &kp PERCENT       &kp SLASH                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PLUS   &kp N4  &kp N5  &kp N6  &kp N0  &none
&trans  &kp K_MUTE        &kp END       &none          &kp GREATER_THAN  &kp CARET     &kp C_MUTE                    &mmv MOVE_DOWN                   &kp MINUS  &kp N1  &kp N2  &kp N3  &none   &trans
                                        &trans         &trans            &trans                                                                       &trans     &mo 3   &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp GRAVE  &kp PIPE       &kp DOUBLE_QUOTES  &kp HASH     &kp LEFT_PARENTHESIS                            &mmv MOVE_UP                     &kp RIGHT_PARENTHESIS  &kp AMPS        &kp UP_ARROW    &kp SINGLE_QUOTE  &kp PAGE_UP    &trans
&trans  &kp TILDE  &kp SEMICOLON  &kp COLON          &kp AT_SIGN  &kp LEFT_BRACKET                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp RIGHT_BRACKET      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT         &kp PAGE_DOWN  &none
&trans  &none      &none          &kp EXCLAMATION    &kp DOLLAR   &kp LEFT_BRACE        &trans                    &mmv MOVE_DOWN                   &kp RIGHT_BRACE        &kp UNDERSCORE  &fetch          &pull             &push          &trans
                                  &trans             &mo 3        &trans                                                                           &trans                 &trans          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&kp F1           &kp F2           &kp F3           &kp F4           &kp F5           &kp F6                                         &mmv MOVE_UP                     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&kp F7           &kp F8           &kp F9           &kp F10          &kp F11          &kp F12                        &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none         &none         &none          &none         &none         &bt BT_CLR_ALL
&rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &none         &none         &none          &none         &none         &none
                                                   &none            &trans           &none                                                                           &none         &trans        &kp RIGHT_ALT
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
